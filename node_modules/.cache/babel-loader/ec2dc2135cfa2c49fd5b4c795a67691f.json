{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\password_generator\\\\frontend\\\\src\\\\components\\\\saved_password\\\\SavedPasswords.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport viewSavedPasswords from '../../api/features/viewSavedPasswords';\nimport './SavedPasswords.css';\nimport { useNavigate } from 'react-router-dom';\nimport deleteSavedPassword from '../../api/features/deleteSavedPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nfunction SavedPasswords() {\n  _s();\n  const navigate = useNavigate();\n  const [passwordList, setPasswordList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await viewSavedPasswords(); // Assuming viewSavedPasswords is a function that fetches the data\n        console.log(\"Response:\", response); // Check the response structure returned from the API\n        setPasswordList(response.passwords); // Set the passwords array to passwordList\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const deletePassword = async passid => {\n    try {\n      await deleteSavedPassword(passid);\n      // Assuming you want to refetch the data after deletion\n      const response = await viewSavedPasswords();\n      setPasswordList(response.passwords);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"password-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: passwordList && passwordList.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.account_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletePassword(item.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(SavedPasswords, \"VX5uCcn/cGHjB9k7dT3RJO+RpsI=\", false, function () {\n  return [useNavigate];\n});\n_c = SavedPasswords;\nexport default SavedPasswords;\nvar _c;\n$RefreshReg$(_c, \"SavedPasswords\");","map":{"version":3,"names":["React","useState","useEffect","viewSavedPasswords","useNavigate","deleteSavedPassword","jsxDEV","_jsxDEV","im","SavedPasswords","_s","navigate","passwordList","setPasswordList","fetchData","response","console","log","passwords","error","deletePassword","passid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","key","account_type","password","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/password_generator/frontend/src/components/saved_password/SavedPasswords.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport viewSavedPasswords from '../../api/features/viewSavedPasswords';\r\nimport './SavedPasswords.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport deleteSavedPassword from '../../api/features/deleteSavedPassword';\r\nim\r\nfunction SavedPasswords() {\r\n    const navigate = useNavigate();\r\n    const [passwordList, setPasswordList] = useState([]); \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await viewSavedPasswords(); // Assuming viewSavedPasswords is a function that fetches the data\r\n                console.log(\"Response:\", response); // Check the response structure returned from the API\r\n                setPasswordList(response.passwords); // Set the passwords array to passwordList\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, []);\r\n\r\n    const deletePassword = async (passid) => {\r\n        try {\r\n            await deleteSavedPassword(passid);\r\n            // Assuming you want to refetch the data after deletion\r\n            const response = await viewSavedPasswords();\r\n            setPasswordList(response.passwords);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {/* <h2 className='main-title'>Saved Passwords</h2> */}\r\n            {/* <button onClick={()=>navigate('/')}>Home</button> */}\r\n            <table className=\"password-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Account</th>\r\n                        <th>Password</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {passwordList && passwordList.map((item, key) => (\r\n                        <tr key={key}>\r\n                            <td>{item.account_type}</td>\r\n                            <td>{item.password}</td>\r\n                            <td>\r\n                                <button onClick={() => deletePassword(item.id)}>Delete</button> \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SavedPasswords;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}